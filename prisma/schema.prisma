generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model file {
  id   String @id(map: "PK_36b46d232307066b3a2c9ea3a1d") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  path String @db.VarChar
  user user[]
}

model history {
  id         Int       @id(map: "PK_9384942edf4804b38ca0ee51416") @default(autoincrement())
  title      String    @db.VarChar
  createdAt  DateTime  @default(now()) @db.Timestamp(6)
  updatedAt  DateTime  @default(now()) @db.Timestamp(6)
  deletedAt  DateTime? @db.Timestamp(6)
  summaryId  Int?      @unique(map: "REL_b648d22a74c3117b9a42bdbba8")
  analyzerId Int?      @unique()
  userId     Int?
  user       user?     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_7d339708f0fa8446e3c4128dea9")
  summary    summary?  @relation(fields: [summaryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_b648d22a74c3117b9a42bdbba8a")
  analyzer   analyzer? @relation(fields: [analyzerId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model migrations {
  id        Int    @id(map: "PK_8c82d7f526340ab734260ea46be") @default(autoincrement())
  timestamp BigInt
  name      String @db.VarChar
}

model role {
  id   Int    @id(map: "PK_b36bcfe02fc8de3c57a8b2391c2")
  name String @db.VarChar
  user user[]
}

model session {
  id        Int       @id(map: "PK_f55da76ac1c3ac420f444d2ff11") @default(autoincrement())
  hash      String    @db.VarChar
  createdAt DateTime  @default(now()) @db.Timestamp(6)
  updatedAt DateTime  @default(now()) @db.Timestamp(6)
  deletedAt DateTime? @db.Timestamp(6)
  userId    Int?
  user      user?     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3d2f174ef04fb312fdebd0ddc53")

  @@index([userId], map: "IDX_3d2f174ef04fb312fdebd0ddc5")
}

model status {
  id   Int    @id(map: "PK_e12743a7086ec826733f54e1d95")
  name String @db.VarChar
  user user[]
}

model summary {
  id        Int      @id(map: "PK_406f24bdfa7fbb014243f5f8571") @default(autoincrement())
  textInput String?  @db.VarChar
  fileInput String?  @db.VarChar
  length    Int
  dataPDF   String   @db.VarChar
  history   history?
}

model analyzer {
  id                Int      @id() @default(autoincrement())
  urlInput          String?  @db.VarChar
  fileInput         String?  @db.VarChar
  dataWordFrequency String   @db.Text
  dataLDA           String   @db.Text
  dataPDF           String   @db.Text
  history           history?
}

model user {
  id        Int       @id(map: "PK_cace4a159ff9f2512dd42373760") @default(autoincrement())
  email     String?   @unique(map: "UQ_e12875dfb3b1d92d7d7c5377e22") @db.VarChar
  password  String?   @db.VarChar
  provider  String    @default("email") @db.VarChar
  socialId  String?   @db.VarChar
  firstName String?   @db.VarChar
  lastName  String?   @db.VarChar
  createdAt DateTime  @default(now()) @db.Timestamp(6)
  updatedAt DateTime  @default(now()) @db.Timestamp(6)
  deletedAt DateTime? @db.Timestamp(6)
  photoId   String?   @db.Uuid
  roleId    Int?
  statusId  Int?
  history   history[]
  session   session[]
  file      file?     @relation(fields: [photoId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_75e2be4ce11d447ef43be0e374f")
  role      role?     @relation(fields: [roleId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_c28e52f758e7bbc53828db92194")
  status    status?   @relation(fields: [statusId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_dc18daa696860586ba4667a9d31")

  @@index([firstName], map: "IDX_58e4dbff0e1a32a9bdc861bb29")
  @@index([socialId], map: "IDX_9bd2fe7a8e694dedc4ec2f666f")
  @@index([lastName], map: "IDX_f0e1b4ecdca13b177e2e3a0613")
}
